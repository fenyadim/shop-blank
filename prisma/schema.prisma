// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/server/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  orders    Order[]
  avatar    String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Category {
  id       String               @id @default(cuid())
  name     String               @unique
  products CategoryOnProducts[]
}

model Product {
  id          String               @id @default(cuid())
  title       String
  description String
  image       String
  price       Float
  categories  CategoryOnProducts[]
  orders      Order[]
  param       ParamItem[]
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt()
}

model Order {
  id        String      @id @default(cuid())
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  products  Product[]
  total     Float
  status    OrderStatus @default(CREATED)
  createdAt DateTime    @default(now())
}

model CategoryOnProducts {
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  assignedAt DateTime @default(now())

  @@id([productId, categoryId])
}

model ParamItem {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[]
}

enum OrderStatus {
  CREATED
  DELIVERED
  COMPLETED
}

enum Role {
  ADMIN
  MODERATOR
  USER
}
